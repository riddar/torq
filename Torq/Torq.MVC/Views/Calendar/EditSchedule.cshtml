
@model Torq.Models.Objects.Schedule

@{
    ViewBag.Title = "EditSchedule";
}
<head><script src="~/Scripts/jquery-3.3.1.js"></script></head>
<script>
    $(document).ready(function () {
        console.log("ready!");
        var $ddSalary = $("#SalaryDD");
        var x = JSON.parse('@Html.Raw(Json.Encode(ViewData["Salaries"]))');
        console.log(@Model.SalaryId);
        console.log(x.indexOf(@Model.SalaryId));
        console.log(x.map(m=>m.Id).indexOf(@Model.SalaryId));
        $ddSalary.prop('selectedIndex', x.map(m => m.Id).indexOf(@Model.SalaryId)+1);

        var $ddEmployee = $("#EmployeeDD"); 
        var y = JSON.parse('@Html.Raw(Json.Encode(ViewData["Employees"]))');
        $ddEmployee.prop('selectedIndex', y.map(m => m.Id).indexOf(@Model.EmployeeId)+1);

    });
</script>
<h2>EditSchedule</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Schedule</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.ClockedIn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ClockedIn)
                @Html.ValidationMessageFor(model => model.ClockedIn, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Employee, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Employee.Id,
             new SelectList((ViewData["Employees"] as IList<Torq.Models.Objects.Employee>),"Id","FirstName"), "Choose Employee", new { @id = "EmployeeDD", @class = "DropDowns" } )
            @Html.ValidationMessageFor(model => model.Employee.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Salary.Id,
             new SelectList((ViewData["Salaries"] as IList<Torq.Models.Objects.Salary>),"Id","SalaryType"), "Choose Salary", new { @id = "SalaryDD", @class = "DropDowns" })
            @Html.ValidationMessageFor(model => model.Salary.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
